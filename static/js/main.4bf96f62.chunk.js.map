{"version":3,"sources":["countrylist.js","chart.js","mainview.js","dashboard.js","App.js","serviceWorker.js","index.js"],"names":["CountryItem","props","handleClick","bind","this","handleToggle","country","name","checked","ListItem","onClick","ListItemIcon","Checkbox","ListItemText","primary","secondary","current","React","Component","CountryList","state","value","currentIndex","indexOf","newChecked","setSelectedCountries","push","splice","setState","countries","classes","countryList","sort","a","b","List","className","list","map","key","withStyles","theme","width","height","backgroundColor","palette","background","paper","overflowY","RelativeChart","chartData","data","reduce","collection","relativeCountry","Object","assign","keys","forEach","population","xtitle","ytitle","Chartkick","configure","mapsApiKey","process","MainView","slice","counter","selected","relative","chart","geoData","length","console","log","globalTotal","root","library","legend","position","magnifyingGlass","enable","zoomFactor","marginTop","urls","cases","deaths","Dashboard","selectedCountries","relativeOrAbsolute","whichData","handleNumbersChange","handleChangeDataType","url","groups","US","Canada","China","Australia","groupValues","Papa","parse","download","header","dynamicTyping","complete","results","i","out","val","Lat","Long","includes","groupValue","k","loadData","filter","c","event","target","Container","AppBar","Toolbar","RadioGroup","row","onChange","FormControlLabel","control","Radio","label","display","maxWidth","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4bf96f62.chunk.js","sourcesContent":["import React from 'react';\nimport { List, ListItem, ListItemText, ListItemIcon, Checkbox } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst useStyles = theme => ({\n    list: {\n        width: 250,\n        height: '100%',\n        backgroundColor: theme.palette.background.paper,\n        overflowY: 'auto',\n    }\n})\n\nclass CountryItem extends React.Component {\n    constructor(props){\n        super(props)\n        this.handleClick = this.handleClick.bind(this)\n    }\n\n    handleClick(){\n        const { handleToggle, country } = this.props;\n        handleToggle(country.name)\n    }\n\n    render(){\n        const { country, checked } = this.props;\n        return (\n            <ListItem onClick={this.handleClick}>\n              <ListItemIcon>\n                <Checkbox  checked={checked} />\n              </ListItemIcon>\n              <ListItemText primary={country.name} secondary={country.current} />\n            </ListItem>\n        )\n    }\n}\n\nclass CountryList extends React.Component {\n    constructor(props){\n        super(props)\n        this.state = {checked: []}\n        this.handleToggle = this.handleToggle.bind(this)\n    }\n\n    handleToggle(value) {\n        const { checked } = this.state,\n              currentIndex = checked.indexOf(value),\n              newChecked = [...checked];\n        const { setSelectedCountries } = this.props\n\n        if (currentIndex === -1) {\n            newChecked.push(value)\n        } else {\n            newChecked.splice(currentIndex, 1)\n        }\n        this.setState({checked: newChecked})\n        setSelectedCountries(newChecked)\n    }\n\n    render() {\n        const { countries, classes } = this.props\n        const { checked } = this.state\n        let countryList = countries.sort((a, b) => {\n            if(a.current > b.current) return -1\n            if(b.current > a.current) return 1\n            return 0\n        })\n        return (\n            <List className={classes.list}>\n                {countryList.map(country => {\n                    return (<CountryItem\n                       key={country.name}\n                        country={country}\n                       handleToggle={this.handleToggle}\n                       checked={checked.indexOf(country.name) !== -1}/>)\n                })}\n            </List>\n        )\n    }\n}\n\nexport default withStyles(useStyles)(CountryList);\n","import React from 'react';\nimport { LineChart } from 'react-chartkick'\nimport 'chart.js'\n\n\nclass RelativeChart extends React.Component {\n    render(){\n        const { data } = this.props;\n        const ytitle = \"Confirmed cases per capita\",\n              xtitle = \"Date\"\n        const chartData = data.reduce((collection, country) =>{\n            let relativeCountry = Object.assign({}, country, {data: {}})\n            Object.keys(country.data).forEach(key => {\n                relativeCountry.data[key] = country.data[key]/country.population\n            })\n            collection.push(relativeCountry)\n            return collection\n\n        }, [])\n        return (\n                <LineChart data={chartData} xtitle={xtitle} ytitle={ytitle}/>\n        )\n    }\n}\n\nexport default RelativeChart;\n","import React from 'react';\nimport Chartkick, { LineChart, GeoChart } from 'react-chartkick'\nimport { withStyles } from '@material-ui/core/styles';\nimport RelativeLineChart from './chart'\n\nChartkick.configure({mapsApiKey: process.env.REACT_APP_GOOGLE_API_KEY})\nconst useStyles = theme => ({\n    root: {\n        backgroundColor: theme.palette.background.paper,\n        width: '100%',\n        marginTop: 20,\n    }\n})\n\n\nclass MainView extends React.Component {\n    globalTotal(countries){\n        let total = countries.slice(1).reduce((counter, country) => {\n            Object.keys(country.data).forEach(key => {\n                counter[key] += country.data[key]\n            })\n            return counter\n        }, Object.assign({}, countries[0].data))\n        return [{name: \"Worldwide\", data: total, population: 7700000}]\n    }\n\n    chartData(countries, selected, relative){\n    }\n    render() {\n        const { countries, selected, classes, relative } = this.props;\n        let xtitle = \"Date\", ytitle = \"Confirmed cases\";\n        let geoData = countries.map(country => {\n            let keys = Object.keys(country.data)\n            let current = country.data[keys[keys.length - 1]]\n            if(relative) {\n                if(!country.population) {\n                    console.log(country.name)\n                }\n                current = current / country.population\n            }\n            return [country.name, current]\n        })\n        let chartData, chart;\n        if (selected.length === 0 && countries.length > 0) {\n            chartData = this.globalTotal(countries)\n        } else {\n            chartData = selected\n        }\n        if(relative){\n            chart = <RelativeLineChart data={chartData} xtitle={xtitle} ytitle={ytitle}/>\n        } else {\n            chart = <LineChart data={chartData} xtitle={xtitle} ytitle={ytitle}/>\n        }\n        const mapOptions = {\n            legend: {position: \"left\"},\n            magnifyingGlass: {enable: true, zoomFactor: 5.0}\n        }\n        return (\n                <div className={classes.root}>\n                <GeoChart width='100%' height='55%' data={geoData} library={mapOptions}/>\n                {chart}\n                </div>\n        )\n    }\n}\n\nexport default withStyles(useStyles)(MainView);\n","import React from 'react';\nimport { Container, AppBar, Toolbar, RadioGroup, Radio, FormControlLabel } from '@material-ui/core';\nimport CountryList from './countrylist';\nimport MainView from './mainview'\nimport Papa from 'papaparse';\nimport { withStyles } from '@material-ui/core/styles';\n// import Chart from './chart';\n\nconst urls = {\n    cases: \"https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Confirmed.csv\",\n    deaths: \"https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Deaths.csv\",\n}\n\nconst population = {\n    \"Afghanistan\": 38041.754,\n    \"Africa\": 1308064.195,\n    \"Albania\": 2880.917,\n    \"Algeria\": 43053.054,\n    \"American Samoa\": 55.312,\n    \"Andorra\": 77.142,\n    \"Angola\": 31825.295,\n    \"Anguilla\": 14.869,\n    \"Antigua and Barbuda\": 97.118,\n    \"Argentina\": 44780.677,\n    \"Armenia\": 2957.731,\n    \"Aruba\": 106.314,\n    \"Asia\": 4601371.198,\n    \"Australia\": 25203.198,\n    \"Australia/New Zealand\": 29986.261,\n    \"Austria\": 8955.102,\n    \"Azerbaijan\": 10047.718,\n    \"Bahamas\": 389.482,\n    \"Bahamas, The\": 389.482,\n    \"Bahrain\": 1641.172,\n    \"Bangladesh\": 163046.161,\n    \"Barbados\": 287.025,\n    \"Belarus\": 9452.411,\n    \"Belgium\": 11539.328,\n    \"Belize\": 390.353,\n    \"Benin\": 11801.151,\n    \"Bermuda\": 62.506,\n    \"Bhutan\": 763.092,\n    \"Bolivia\": 11513.1,\n    \"Bonaire, Sint Eustatius and Saba\": 25.979,\n    \"Bosnia and Herzegovina\": 3301,\n    \"Botswana\": 2303.697,\n    \"Brazil\": 211049.527,\n    \"British Virgin Islands\": 30.03,\n    \"Brunei\": 433.285,\n    \"Bulgaria\": 7000.119,\n    \"Burkina Faso\": 20321.378,\n    \"Burundi\": 11530.58,\n    \"Cabo Verde\": 549.935,\n    \"Cape Verde\": 549.935,\n    \"Cambodia\": 16486.542,\n    \"Cameroon\": 25876.38,\n    \"Canada\": 37411.047,\n    \"Caribbean\": 43334.985,\n    \"Cayman Islands\": 64.948,\n    \"Central African Republic\": 4745.185,\n    \"Central America\": 177586.526,\n    \"Central and Southern Asia\": 1991423.481,\n    \"Central Asia\": 73212.1,\n    \"Chad\": 15946.876,\n    \"Channel Islands\": 172.259,\n    \"Chile\": 18952.038,\n    \"China\": 1433783.686,\n    \"China, Hong Kong SAR\": 7436.154,\n    \"China, Macao SAR\": 640.445,\n    \"Taiwan*\": 23780.452,\n    \"Diamond Princess\": 3.711,\n    \"Other non-specified areas\": 23773.876,\n    \"Colombia\": 50339.443,\n    \"Comoros\": 850.886,\n    \"Congo (Brazzaville)\": 5380.508,\n    \"Cook Islands\": 17.548,\n    \"Costa Rica\": 5047.561,\n    \"Cote d'Ivoire\": 25716.544,\n    \"Croatia\": 4130.304,\n    \"Cuba\": 11333.483,\n    \"Curacao\": 163.424,\n    \"Cyprus\": 1198.575,\n    \"Czechia\": 10689.209,\n    \"Dem. People's Republic of Korea\": 25666.161,\n    \"Congo (Kinshasa)\": 86790.567,\n    \"Denmark\": 5771.876,\n    \"Djibouti\": 973.56,\n    \"Dominica\": 71.808,\n    \"Dominican Republic\": 10738.958,\n    \"Eastern Africa\": 433904.943,\n    \"Eastern and South-Eastern Asia\": 2334622.904,\n    \"Eastern Asia\": 1672611.098,\n    \"Eastern Europe\": 293444.913,\n    \"Ecuador\": 17373.662,\n    \"Egypt\": 100388.073,\n    \"El Salvador\": 6453.553,\n    \"Equatorial Guinea\": 1355.986,\n    \"Eritrea\": 3497.117,\n    \"Estonia\": 1325.648,\n    \"Eswatini\": 1148.13,\n    \"Ethiopia\": 112078.73,\n    \"Falkland Islands (Malvinas)\": 3.377,\n    \"Faroe Islands\": 48.678,\n    \"Fiji\": 889.953,\n    \"Finland\": 5532.156,\n    \"France\": 65129.728,\n    \"French Guiana\": 290.832,\n    \"French Polynesia\": 279.287,\n    \"Gabon\": 2172.579,\n    \"Gambia, The\": 2347.706,\n    \"Georgia\": 3996.765,\n    \"Germany\": 83517.045,\n    \"Ghana\": 30417.856,\n    \"Gibraltar\": 33.701,\n    \"Greece\": 10473.455,\n    \"Greenland\": 56.672,\n    \"Grenada\": 112.003,\n    \"Guadeloupe\": 400.056,\n    \"Guam\": 167.294,\n    \"Guatemala\": 17581.472,\n    \"Guinea\": 12771.246,\n    \"Guinea-Bissau\": 1920.922,\n    \"Guyana\": 782.766,\n    \"Haiti\": 11263.077,\n    \"High-income countries\": 1258043.422,\n    \"Holy See\": 0.799,\n    \"Honduras\": 9746.117,\n    \"Hungary\": 9684.679,\n    \"Iceland\": 339.031,\n    \"India\": 1366417.754,\n    \"Indonesia\": 270625.568,\n    \"Iran\": 82913.906,\n    \"Iraq\": 39309.783,\n    \"Ireland\": 4882.495,\n    \"Isle of Man\": 84.584,\n    \"Israel\": 8519.377,\n    \"Italy\": 60550.075,\n    \"Jamaica\": 2948.279,\n    \"Japan\": 126860.301,\n    \"Jordan\": 10101.694,\n    \"Kazakhstan\": 18551.427,\n    \"Kenya\": 52573.973,\n    \"Kiribati\": 117.606,\n    \"Kuwait\": 4207.083,\n    \"Kyrgyzstan\": 6415.85,\n    \"Lao People's Democratic Republic\": 7169.455,\n    \"Latvia\": 1906.743,\n    \"Lebanon\": 6855.713,\n    \"Lesotho\": 2125.268,\n    \"Liberia\": 4937.374,\n    \"Libya\": 6777.452,\n    \"Liechtenstein\": 38.019,\n    \"Lithuania\": 2759.627,\n    \"Low-income countries\": 755849.769,\n    \"Lower-middle-income countries\": 3057708.838,\n    \"Luxembourg\": 615.729,\n    \"Madagascar\": 26969.307,\n    \"Malawi\": 18628.747,\n    \"Malaysia\": 31949.777,\n    \"Maldives\": 530.953,\n    \"Mali\": 19658.031,\n    \"Malta\": 440.372,\n    \"Marshall Islands\": 58.791,\n    \"Martinique\": 375.554,\n    \"Mauritania\": 4525.696,\n    \"Mauritius\": 1269.668,\n    \"Mayotte\": 266.15,\n    \"Melanesia\": 10918.517,\n    \"Mexico\": 127575.529,\n    \"Micronesia\": 543.486,\n    \"Micronesia (Fed. States of)\": 113.815,\n    \"Middle Africa\": 174308.432,\n    \"Middle-income countries\": 5696667.251,\n    \"Monaco\": 38.964,\n    \"Mongolia\": 3225.167,\n    \"Montenegro\": 627.987,\n    \"Montserrat\": 4.989,\n    \"More developed regions\": 1270630.277,\n    \"Morocco\": 36471.769,\n    \"Mozambique\": 30366.036,\n    \"Myanmar\": 54045.42,\n    \"Namibia\": 2494.53,\n    \"Nauru\": 10.756,\n    \"Nepal\": 28608.71,\n    \"Netherlands\": 17097.13,\n    \"New Caledonia\": 282.75,\n    \"New Zealand\": 4783.063,\n    \"Nicaragua\": 6545.502,\n    \"Niger\": 23310.715,\n    \"Nigeria\": 200963.599,\n    \"Niue\": 1.615,\n    \"No income group available\": 2907.658,\n    \"North Macedonia\": 2083.459,\n    \"Northern Africa\": 241780.768,\n    \"Northern Africa and Western Asia\": 517105.581,\n    \"Northern America\": 366600.964,\n    \"Northern America__1\": 366600.964,\n    \"Northern Europe\": 105768.505,\n    \"Northern Mariana Islands\": 57.216,\n    \"Norway\": 5378.857,\n    \"Oceania\": 42128.035,\n    \"Oceania (excluding Australia and New Zealand)\": 12141.774,\n    \"Oman\": 4974.986,\n    \"Pakistan\": 216565.318,\n    \"Palau\": 18.008,\n    \"Panama\": 4246.439,\n    \"Papua New Guinea\": 8776.109,\n    \"Paraguay\": 7044.636,\n    \"Peru\": 32510.453,\n    \"Philippines\": 108116.615,\n    \"Poland\": 37887.768,\n    \"Polynesia\": 679.771,\n    \"Portugal\": 10226.187,\n    \"Puerto Rico\": 2933.408,\n    \"Qatar\": 2832.067,\n    \"Korea, South\": 51225.308,\n    \"Moldova\": 4043.263,\n    \"Réunion\": 888.927,\n    \"Romania\": 19364.557,\n    \"Russia\": 145872.256,\n    \"Rwanda\": 12626.95,\n    \"Saint Helena\": 6.059,\n    \"Saint Kitts and Nevis\": 52.823,\n    \"Saint Lucia\": 182.79,\n    \"Saint Pierre and Miquelon\": 5.822,\n    \"Saint Vincent and the Grenadines\": 110.589,\n    \"Saint Barthelemy\": 9.847,\n    \"St Martin\": 38.002,\n    \"Samoa\": 197.097,\n    \"San Marino\": 33.86,\n    \"Sao Tome and Principe\": 215.056,\n    \"Saudi Arabia\": 34268.528,\n    \"Senegal\": 16296.364,\n    \"Serbia\": 8772.235,\n    \"Seychelles\": 97.739,\n    \"Sierra Leone\": 7813.215,\n    \"Singapore\": 5804.337,\n    \"Sint Maarten\": 42.388,\n    \"Slovakia\": 5457.013,\n    \"Slovenia\": 2078.654,\n    \"Small Island Developing States (SIDS)\": 71428.792,\n    \"Solomon Islands\": 669.823,\n    \"Somalia\": 15442.905,\n    \"South Africa\": 58558.27,\n    \"South America\": 427199.446,\n    \"South Sudan\": 11062.113,\n    \"South-Eastern Asia\": 662011.806,\n    \"Southern Africa\": 66629.895,\n    \"Southern Asia\": 1918211.381,\n    \"Southern Europe\": 152446.923,\n    \"Spain\": 46736.776,\n    \"Sri Lanka\": 21323.733,\n    \"State of Palestine\": 4981.42,\n    \"Sub-Saharan Africa\": 1066283.427,\n    \"Sudan\": 42813.238,\n    \"Suriname\": 581.372,\n    \"Sweden\": 10036.379,\n    \"Switzerland\": 8591.365,\n    \"Syria\": 17070.135,\n    \"Tajikistan\": 9321.018,\n    \"Thailand\": 69625.582,\n    \"East Timor\": 1293.119,\n    \"Timor-Leste\": 1293.119,\n    \"Togo\": 8082.366,\n    \"Tokelau\": 1.34,\n    \"Tonga\": 104.494,\n    \"Trinidad and Tobago\": 1394.973,\n    \"Tunisia\": 11694.719,\n    \"Turkey\": 83429.615,\n    \"Turkmenistan\": 5942.089,\n    \"Turks and Caicos Islands\": 38.191,\n    \"Tuvalu\": 11.646,\n    \"Uganda\": 44269.594,\n    \"Ukraine\": 43993.638,\n    \"United Arab Emirates\": 9770.529,\n    \"United Kingdom\": 67530.172,\n    \"Tanzania\": 58005.463,\n    \"United States\": 329064.917,\n    \"United States Virgin Islands\": 104.578,\n    \"Upper-middle-income countries\": 2638958.413,\n    \"Uruguay\": 3461.734,\n    \"Uzbekistan\": 32981.716,\n    \"Vanuatu\": 299.882,\n    \"Venezuela\": 28515.829,\n    \"Vietnam\": 96462.106,\n    \"Wallis and Futuna Islands\": 11.432,\n    \"Western Africa\": 391440.157,\n    \"Western Asia\": 275324.813,\n    \"Western Europe\": 195522.41,\n    \"Western Sahara\": 582.463,\n    \"World\": 7713468.1,\n    \"Yemen\": 29161.922,\n    \"Zambia\": 17861.03,\n    \"Zimbabwe\": 14645.468,\n    \"Kosovo\": 1810,\n    \"Reunion\": 859.959,\n}\n\nconst useStyles = theme => ({\n    root: {\n        backgroundColor: theme.palette.background.paper,\n        display: 'flex',\n        height: '100%',\n        maxWidth: '100%',\n        marginTop: 60\n    }\n})\n\nclass Dashboard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            countries: [],\n            selectedCountries: [],\n            relativeOrAbsolute: 'absolute',\n            whichData: 'cases'\n        }\n        this.setSelectedCountries = this.setSelectedCountries.bind(this)\n        this.handleNumbersChange = this.handleNumbersChange.bind(this)\n        this.handleChangeDataType = this.handleChangeDataType.bind(this)\n    }\n\n    loadData(url) {\n        const groups = {US: \"United States\", Canada: \"Canada\", China: \"China\", Australia: \"Australia\"}\n        let groupValues = {}\n        Papa.parse(url, {\n            download: true,\n            header: true,\n            dynamicTyping: true,\n            complete: (results) => {\n                let data = [];\n                for (let i=0;i<results.data.length;i++) {\n                    let out = {},\n                        val = results.data[i],\n                        country = val[\"Country/Region\"];\n                    delete val.Lat\n                    delete val.Long\n                    if(Object.keys(groups).includes(country)){\n                        if(val[\"Province/State\"] && val[\"Province/State\"].includes(\",\")){\n                            continue\n                        }\n                        let groupValue = groupValues[country]\n                        if(groupValue) {\n                            Object.keys(groupValue.data).forEach(k => {\n                                groupValue.data[k] += val[k]\n                            })\n                            let keys = Object.keys(val)\n                            let current = val[keys[keys.length-1]]\n                            groupValue.current += current\n                        } else {\n                            out.name = groups[country]\n                            out.population = population[out.name]\n                            delete val[\"Province/State\"]\n                            delete val[\"Country/Region\"]\n                            out.data = val\n                            let keys = Object.keys(val)\n                            out.current = val[keys[keys.length-1]]\n                            data.push(out)\n                            groupValues[country] = out\n                        }\n                    } else {\n                        out.name = val[\"Country/Region\"]\n                        if(val[\"Province/State\"]){\n                            out.name = val[\"Province/State\"]\n                        }\n                        out.population = population[out.name]\n                        delete val.Lat\n                        delete val.Long\n                        delete val[\"Province/State\"]\n                        delete val[\"Country/Region\"]\n                        out.data = val\n                        let keys = Object.keys(val)\n                        out.current = val[keys[keys.length-1]]\n                        data.push(out)\n                    }\n                }\n                this.setState({countries: data})\n            }\n        })\n    }\n\n    componentDidMount() {\n        this.loadData(urls[this.state.whichData])\n    }\n\n    setSelectedCountries(selected){\n        const { countries } = this.state;\n        let selectedCountries = countries.filter(c => {\n            return selected.includes(c.name)\n        })\n        this.setState({selectedCountries: selectedCountries})\n    }\n\n    handleNumbersChange(event){\n        this.setState({relativeOrAbsolute: event.target.value})\n    }\n\n    handleChangeDataType(event){\n        this.setState({whichData: event.target.value})\n        this.loadData(urls[event.target.value])\n    }\n\n    render() {\n        const { classes } = this.props;\n        let { countries, selectedCountries, relativeOrAbsolute, whichData } = this.state;\n        return (\n            <Container className={classes.root}>\n                <AppBar>\n                <Toolbar>\n                <RadioGroup row value={relativeOrAbsolute} onChange={this.handleNumbersChange}>\n                      <FormControlLabel value=\"absolute\" control={<Radio />} label=\"Absolute numbers\" />\n                      <FormControlLabel value=\"capita\" control={<Radio />} label=\"Per capita\" />\n                </RadioGroup>\n                <RadioGroup row value={whichData} onChange={this.handleChangeDataType}>\n                      <FormControlLabel value=\"cases\" control={<Radio />} label=\"Confirmed cases\" />\n                      <FormControlLabel value=\"deaths\" control={<Radio />} label=\"Deaths\" />\n                </RadioGroup>\n                </Toolbar>\n                </AppBar>\n                <CountryList countries={countries} setSelectedCountries={this.setSelectedCountries}/>\n                <MainView countries={countries} selected={selectedCountries} relative={relativeOrAbsolute === 'capita'}/>\n            </Container>\n        )\n    }\n}\n\nexport default withStyles(useStyles)(Dashboard);\n","import React from 'react';\nimport Dashboard from './dashboard';\nimport './App.css';\n\nfunction App() {\n  return (<Dashboard/>);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}